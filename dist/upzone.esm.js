class e{constructor(e,i){if(this.dropzone=null,this.fileInput=null,this.fileList=null,!(e instanceof HTMLElement))throw new Error("O primeiro parâmetro deve ser um elemento HTML válido.");this.element=e,this.options=Object.assign({autoRender:!0,autoQueue:!0,multipleUploads:!0,url:"/upload",method:"POST",headers:{},params:{},acceptedTypes:["*"],maxFileSize:1/0,minFileSize:0,messages:{default:"Drag and drop your files here or <strong>Browse</strong>",invalidType:"Invalid file type: {file}",invalidSize:"Invalid file size: {file} ({size} KB)",uploadError:"Error uploading file: {file}",uploadSuccess:"File uploaded successfully: {file}",fileRemoved:"File removed: {file}"}},i),this.eventListeners={},this.uploadedFiles=[],this.queue=[],this.uploadingFiles=new Map,this.options.autoRender&&(this.createDropzone(),this.initialize())}createDropzone(){var e,i;const s=document.createElement("div");s.id="dropzone",s.className="dropzone",s.innerHTML=`\n        ${null===(i=null===(e=this.options)||void 0===e?void 0:e.messages)||void 0===i?void 0:i.default}\n        <input type='file' id='fileInput' ${this.options.multipleUploads?"multiple":""} accept="${this.options.acceptedTypes.join(",")}" style='display: none;' />`;const t=document.createElement("ul");t.id="fileList",t.className="file-list",this.element.appendChild(s),this.element.appendChild(t)}initialize(){this.dropzone=this.element.querySelector("#dropzone"),this.fileInput=this.element.querySelector("#fileInput"),this.fileList=this.element.querySelector("#fileList"),this.setupEventListeners()}setupEventListeners(){this.dropzone&&this.fileInput&&(this.dropzone.addEventListener("dragover",this.handleDragOver.bind(this)),this.dropzone.addEventListener("dragleave",this.handleDragLeave.bind(this)),this.dropzone.addEventListener("drop",this.handleDrop.bind(this)),this.dropzone.addEventListener("click",(()=>{var e;return null===(e=this.fileInput)||void 0===e?void 0:e.click()})),this.fileInput.addEventListener("change",this.handleFileSelect.bind(this)))}handleDragOver(e){e.preventDefault(),this.dropzone&&this.dropzone.classList.add("drag-over")}handleDragLeave(e){e.preventDefault(),this.dropzone&&this.dropzone.classList.remove("drag-over")}handleDrop(e){var i;e.preventDefault(),this.dropzone&&this.dropzone.classList.remove("drag-over");const s=null===(i=e.dataTransfer)||void 0===i?void 0:i.files;s&&this.validateAndHandleFiles(s)}handleFileSelect(e){const i=e.target.files;i&&this.validateAndHandleFiles(i)}validateAndHandleFiles(e){Array.from(e).forEach((e=>{if(this.isValidFileType(e))if(this.isValidFileSize(e))this.emit("fileadded",{name:e.name,size:e.size}),this.addFileToList(e),this.options.autoQueue?this.uploadFile(e):this.queue.push(e);else{const i=(e.size/1024).toFixed(1),s=this.formatMessage(this.options.messages.invalidSize,{file:e.name,size:i});this.emit("uploaderror",{file:{name:e.name,size:e.size},message:s})}else{const i=this.formatMessage(this.options.messages.invalidType,{file:e.name});this.emit("uploaderror",{file:{name:e.name,size:e.size},message:i})}}))}isValidFileType(e){const i=this.options.acceptedTypes;return i.includes("*")||i.some((i=>e.type.includes(i)))}isValidFileSize(e){return e.size>=this.options.minFileSize&&e.size<=this.options.maxFileSize}addFileToList(e){var i;const s=document.createElement("li");s.classList.add("file-list-item");const t=document.createElement("div");t.className="file-preview";const n=document.createElement("div");if(n.className="preview",e.type.startsWith("image/")){const i=new FileReader;i.onload=e=>{var i;n.style.backgroundImage=`url(${null===(i=e.target)||void 0===i?void 0:i.result})`},i.readAsDataURL(e)}else n.classList.add("file-icon");t.appendChild(n);const l=document.createElement("div");l.className="file-info",l.innerHTML=`<span class="file-name">${e.name}</span><span class="file-info">${(e.size/1024).toFixed(1)} KB</span>`,t.appendChild(l),s.appendChild(t);const a=document.createElement("button");a.className="remove-btn",a.innerHTML="&times;",a.addEventListener("click",(()=>{var i;null===(i=this.fileList)||void 0===i||i.removeChild(s),this.uploadedFiles=this.uploadedFiles.filter((i=>i.name!==e.name));const t=this.formatMessage(this.options.messages.fileRemoved,{file:e.name});this.emit("fileremoved",{file:{name:e.name,size:e.size},message:t})})),s.appendChild(a),null===(i=this.fileList)||void 0===i||i.appendChild(s),e.listItem=s}uploadFile(e){var i,s;const t=new FormData;t.append("file",e);for(const[e,i]of Object.entries(this.options.params))t.append(e,i);const n=new XMLHttpRequest;n.open(null!==(i=this.options.method)&&void 0!==i?i:"POST",null!==(s=this.options.url)&&void 0!==s?s:"/upload");for(const[e,i]of Object.entries(this.options.headers))n.setRequestHeader(e,i);this.uploadingFiles.set(e,n),n.upload.addEventListener("progress",(i=>{if(i.lengthComputable){const s=i.loaded/i.total*100;if(e.listItem){e.listItem.classList.add("uploading"),e.listItem.style.backgroundSize=`${s}% 100%`;const i=e.listItem.querySelector("span.file-info");i&&(i.textContent=`Uploading... (${s.toFixed(1)}%)`)}}})),n.onload=()=>{if(e.listItem&&e.listItem.classList.remove("uploading"),200===n.status||201===n.status){const i=this.formatMessage(this.options.messages.uploadSuccess,{file:e.name});if(e.listItem){e.listItem.classList.add("uploaded");const i=e.listItem.querySelector("span.file-info");i&&(i.textContent=`${e.name} uploaded successfully.`)}this.emit("uploadsuccess",{file:{name:e.name,size:e.size},message:i})}else{const i=this.formatMessage(this.options.messages.uploadError,{file:e.name});this.emit("uploaderror",{file:{name:e.name,size:e.size},message:i})}this.uploadingFiles.delete(e)},n.onerror=()=>{const i=this.formatMessage(this.options.messages.uploadError,{file:e.name});this.emit("uploaderror",{file:{name:e.name,size:e.size},message:i}),this.uploadingFiles.delete(e)},n.send(t)}formatMessage(e,i){return e.replace(/{(.*?)}/g,((e,s)=>i[s]||""))}emit(e,i){const s=this.eventListeners[e];s&&s.forEach((e=>e(i)))}on(e,i){this.eventListeners[e]||(this.eventListeners[e]=[]),this.eventListeners[e].push(i)}}export{e as Dropzone};
//# sourceMappingURL=upzone.esm.js.map
